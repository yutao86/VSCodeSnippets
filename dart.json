{
  "Screen Stateful Widget": {
    "prefix": "Screen",
    "body": [
      "import 'package:flutter/material.dart';",
      "",
      "class ${1:Name}Screen extends StatefulWidget {",
      "  const ${1:Name}Screen({Key? key}) : super(key: key);",
      "",
      "  @override",
      "  State<${1:Name}Screen> createState() => _${1:Name}ScreenState();",
      "}",
      "",
      "class _${1:Name}ScreenState extends State<${1:Name}Screen> {",
      "  @override",
      "  Widget build(BuildContext context) {",
      "    return Scaffold(",
      "      appBar: AppBar(title: const Text(\"${2:Title}\")),",
      "      body: const Center(",
      "        child: Text(\"todo\"),",
      "      ),",
      "    );",
      "  }",
      "}"
    ],
    "description": "Screen Stateful Widget"
  },
  "PopupMenuButton Template": {
    "prefix": "popupMenuButtonT",
    "body": [
      "PopupMenuButton(",
      "  itemBuilder: (BuildContext context) {",
      "    return const [",
      "      PopupMenuItem(child: Text(\"${1:Item1}\"), value: \"${1:Item1}\"),",
      "      PopupMenuItem(child: Text(\"${2:Item2}\"), value: \"${2:Item2}\"),",
      "    ];",
      "  },",
      "  onSelected: (dynamic object) {",
      "    switch (object) {",
      "      case \"${1:Item1}\":",
      "        debugPrint(\"${1:Item1} selected\");",
      "        break;",
      "      case \"${2:Item2}\":",
      "        debugPrint(\"${2:Item2} selected\");",
      "        break;",
      "      default:",
      "    }",
      "  },",
      "  onCanceled: () {",
      "    debugPrint(\"canceled\");",
      "  },",
      ");"
    ],
    "description": "PopupMenuButton Template"
  },
  "Stream Controller Template": {
    "prefix": "streamController",
    "body": [
      "late StreamController<${1:EventType}> _streamController;",
      "",
      "late Stream<${1:EventType}> _stream;",
      "",
      "Stream<${1:EventType}> get stream => _stream;",
      "",
      "initStream() {",
      "  _streamController = StreamController<${1:EventType}>();",
      "  _stream = _streamController.stream.asBroadcastStream();",
      "}"
    ],
    "description": "Stream Controller Template"
  }
}