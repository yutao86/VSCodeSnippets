{
  "C++ Singleton Template Class": {
    "prefix": "singleton",
    "body": [
      "class ${1:Name}",
      "{",
      "    private:",
      "        static ${1:Name}* instance; // Here will be the instance stored.",
      "        ${1:Name}(); // Private constructor to prevent instancing.",
      "    public:",
      "        static ${1:Name}* getInstance(); // Static access method.",
      "};",
      "",
      "// Null, because instance will be initialized on demand. ",
      "${1:Name}* ${1:Name}::instance = 0;",
      "",
      "${1:Name}* ${1:Name}::getInstance()",
      "{",
      "    if (instance == 0)",
      "    {",
      "        instance = new ${1:Name}();",
      "    }",
      "",
      "    return instance;",
      "}",
      "",
      "${1:Name}::${1:Name}()",
      "{",
      "    ",
      "}"
    ],
    "description": "C++ Singleton Template Class"
  }
}